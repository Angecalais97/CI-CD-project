pipeline {
    agent any
    
    tools {
        maven 'CI-CD-project'
    }

    environment {
        SONAR_AUTH_TOKEN = credentials('CI-CD-project') // Corrected usage of environment variable
    }
    
    stages {
        stage('Cloning') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Angecalais97/CI-CD-project'
            }
        }

        stage('Maven Package') {
            steps {
                sh 'mvn clean package -Dmaven.repo.local=/tmp/target'
            }
        }

        stage('SonarQube Analysis') {
                environment {
                CI = 'true'
                scannerHome = '/opt/sonar-scanner'
                }
            steps {
                withSonarQubeEnv('CI-CD-project') {
                    
                    sh '''
                    "${scannerHome}/bin/sonar-scanner"
                    mvn sonar:sonar \
                      -Dsonar.projectKey=CI-CD-project \
                      -Dsonar.host.url=https://sonarqube.devopseasylearning.uk \
                      -Dsonar.login=$SONARQUBE_TOKEN
                    '''
                }
            }
        }
    }
}
