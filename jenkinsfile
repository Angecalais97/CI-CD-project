pipeline {
    agent any
    
    tools {
        maven 'CI-CD-project'
    }

    environment {
        SONAR_AUTH_TOKEN = credentials('CI-CD-project')
    }
    
    stages {
        stage('Cloning') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Angecalais97/CI-CD-project'
            }
        }

        stage('Maven Package') {
            steps {
                sh 'mvn clean package -Dmaven.repo.local=/tmp/target'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    docker.image('sonarsource/sonar-scanner-cli:latest').inside {
                        withEnv(['SONAR_SCANNER_OPTS=-Dsonar.projectKey=CI-CD-project -Dsonar.projectName=CI-CD-Project -Dsonar.host.url=https://sonarqube.devopseasylearning.uk -Dsonar.login=$SONAR_AUTH_TOKEN']) {
                            sh 'sonar-scanner -X'
                        }
                    }
                }
            }
        }
    }
}
